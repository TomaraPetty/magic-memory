{"version":3,"sources":["components/SingleCard.js","App.js","index.js"],"names":["SingleCard","card","handleChoice","flipped","disabled","className","src","alt","onClick","cardImages","matched","App","useState","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","setDisabled","shuffleCards","shuffledCards","sort","Math","random","map","id","useEffect","prevCards","resetTurn","setTimeout","console","log","prevTurns","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAGe,SAASA,EAAW,GAA4C,IAA1CC,EAAI,EAAJA,KAAMC,EAAY,EAAZA,aAAcC,EAAO,EAAPA,QAASC,EAAQ,EAARA,SAOhE,OACE,qBAAKC,UAAU,OAAM,SACnB,qBAAKA,UAAWF,EAAU,UAAY,GAAG,SACzC,sBAAKE,UAAU,eAAc,UAC3B,mBACEA,UAAS,gBAAWJ,EAAKK,KAEzBC,IAAI,eAEN,qBACEF,UAAU,OACVC,IAAI,oBACJE,QAlBY,WACbJ,GACHF,EAAaD,EAEjB,EAeQM,IAAI,oBAMd,CCzBA,IASME,EAAa,CACjB,CAAEH,IARM,gCAQaI,SAAS,GAC9B,CAAEJ,IAVK,kCAUaI,SAAS,GAC7B,CAAEJ,IATI,gCASaI,SAAS,GAC5B,CAAEJ,IATU,2BASaI,SAAS,GAClC,CAAEJ,IATG,2CASaI,SAAS,GAC3B,CAAEJ,IATM,mCASaI,SAAS,IAgFjBC,MA7Ef,WACE,MAA0BC,mBAAS,IAAG,mBAA/BC,EAAK,KAAEC,EAAQ,KACtB,EAA0BF,mBAAS,GAAE,mBAA9BG,EAAK,KAAEC,EAAQ,KACtB,EAAkCJ,mBAAS,MAAK,mBAAzCK,EAAS,KAAEC,EAAY,KAC9B,EAAkCN,mBAAS,MAAK,mBAAzCO,EAAS,KAAEC,EAAY,KAC9B,EAAgCR,oBAAS,GAAM,mBAAxCR,EAAQ,KAAEiB,EAAW,KAEtBC,EAAe,WACnB,IAAMC,EAAgB,UAAId,EAAeA,GACtCe,MAAK,kBAAMC,KAAKC,SAAW,EAAG,IAC9BC,KAAI,SAAA1B,GAAI,kCAAUA,GAAI,IAAE2B,GAAIH,KAAKC,UAAQ,IAE5CR,EAAa,MACbE,EAAa,MACbN,EAASS,GACTP,EAAS,EACX,EAEMd,EAAe,SAAAD,GACnBgB,EAAYG,EAAanB,GAAQiB,EAAajB,EAChD,EAEA4B,qBAAU,WACJZ,GAAaE,IACfE,GAAY,GACRJ,EAAUX,MAAQa,EAAUb,KAC9BQ,GAAS,SAAAgB,GACP,OAAOA,EAAUH,KAAI,SAAA1B,GACnB,OAAGA,EAAKK,MAAQW,EAAUX,IACxB,2BAAWL,GAAI,IAAES,SAAS,IAEnBT,CAEX,GACF,IACA8B,KAEAC,YAAW,kBAAMD,GAAW,GAAE,KAGpC,GAAG,CAACd,EAAWE,IAEfc,QAAQC,IAAIrB,GAEZ,IAAMkB,EAAY,WAChBb,EAAa,MACbE,EAAa,MACbJ,GAAS,SAAAmB,GAAS,OAAIA,EAAY,CAAC,IACnCd,GAAY,EACd,EAOA,OAJAQ,qBAAU,WACRP,GACF,GAAG,IAGD,sBAAKjB,UAAU,MAAK,UAClB,6BAAI,qBACJ,wBAAQG,QAASc,EAAa,SAAC,aAE/B,qBAAKjB,UAAU,YAAW,SACvBQ,EAAMc,KAAI,SAAA1B,GAAI,OACb,cAAC,EAAU,CAEXA,KAAMA,EACNC,aAAcA,EACdC,QAASF,IAASgB,GAAahB,IAASkB,GAAalB,EAAKS,QAC1DN,SAAUA,GAJLH,EAAK2B,GAKR,MAGN,8BAAG,UAAQb,OAGjB,EC5FAqB,IAASC,OACP,cAAC,IAAMC,WAAU,UACf,cAAC,EAAG,MAENC,SAASC,eAAe,Q","file":"static/js/main.eee25ab2.chunk.js","sourcesContent":["import React from 'react';\nimport './SingleCard.css';\n\nexport default function SingleCard({ card, handleChoice, flipped, disabled }) {\n  const handleClick = () => {\n    if (!disabled) {\n      handleChoice(card);\n    }\n  };\n\n  return (\n    <div className='card'>\n      <div className={flipped ? 'flipped' : ''}>\n      <div className='text-wrapper'>\n        <i\n          className={`front ${card.src}`}\n          // src={card.src}\n          alt='card front'\n        ></i>\n        <img\n          className='back'\n          src='/img/computer.png'\n          onClick={handleClick}\n          alt='card back'\n        />\n      </div>\n      </div>\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport './App.css';\nimport SingleCard from './components/SingleCard';\n\nconst logos = {\n  react: \"devicon-react-original-wordmark\",\n  python: \"devicon-python-plain-wordmark\",\n  node: \"devicon-nodejs-plain-wordmark\",\n  typescript: \"devicon-typescript-plain\",\n  aws: \"devicon-amazonwebservices-plain-wordmark\",\n  github: \"devicon-github-original-wordmark\"\n}\n\nconst cardImages = [\n  { src: logos.python, matched: false },\n  { src: logos.react, matched: false },\n  { src: logos.node, matched: false },\n  { src: logos.typescript, matched: false },\n  { src: logos.aws, matched: false },\n  { src: logos.github, matched: false },\n];\n\nfunction App() {\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n  const [disabled, setDisabled] = useState(false)\n\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages]\n      .sort(() => Math.random() - 0.5)\n      .map(card => ({ ...card, id: Math.random() }));\n\n    setChoiceOne(null)\n    setChoiceTwo(null)\n    setCards(shuffledCards);\n    setTurns(0);\n  };\n\n  const handleChoice = card => {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n  };\n\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      setDisabled(true)\n      if (choiceOne.src === choiceTwo.src) {\n        setCards(prevCards => {\n          return prevCards.map(card => {\n            if(card.src === choiceOne.src) {\n              return{ ...card, matched: true }\n            } else {\n              return card\n            }\n          })\n        })\n        resetTurn();\n      } else {\n        setTimeout(() => resetTurn(), 1000)\n      }\n    }\n  }, [choiceOne, choiceTwo]);\n\n  console.log(cards)\n\n  const resetTurn = () => {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setTurns(prevTurns => prevTurns + 1);\n    setDisabled(false)\n  };\n\n  // Start automatically \n  useEffect(() => {\n    shuffleCards()\n  }, [])\n\n  return (\n    <div className='App'>\n      <h1>Technical Skills</h1>\n      <button onClick={shuffleCards}>New Game</button>\n\n      <div className='card-grid'>\n        {cards.map(card => (\n          <SingleCard \n          key={card.id} \n          card={card} \n          handleChoice={handleChoice}\n          flipped={card === choiceOne || card === choiceTwo || card.matched}\n          disabled={disabled}\n          />\n        ))}\n      </div>\n      <p>Turns: {turns}</p>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}